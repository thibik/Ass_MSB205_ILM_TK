---
title: "Arbeidskrav i MSB205"
author: 
 - "Thibiga Kuddyar"
 - "Ingrid-Liv Morkken"
format: pdf
editor: visual
lang: no-NB
---

```{r setup, echo=FALSE, message=FALSE}
library(tidyverse)
library(lubridate)
library(sf)
library(here)
library(tmap)
library(sp)
library(spdep)
library(spatialreg)
library(lmtest)
library(sandwich)
library(units)
library(car)
library(foreign)
library(readr)
library(dplyr)
library(huxtable)
```

## Oppgave 1

## Oppgave 2; House Sales in King County

```{r, message=FALSE}
kc_house_data <- read_csv("kc_house_data.csv")
```

```{r}
kc_house_data <- arrange(kc_house_data, desc(date))
```

```{r}
kc_house_data <- kc_house_data %>% 
  distinct(id, .keep_all=TRUE)
```

```{r}
kc_house_data_sf <- st_as_sf(kc_house_data,
                             coords= c(x = "long", y = "lat"),
                             crs = 4326) %>%
  st_transform(2926)
```

Koordinatene til Seattle hentet fra Wikipedia: 47°36'35N 122°1955V I desimaler: 47.609722, -122.333056

```{r}
cbd <- st_sfc(st_point(c(-122.333056, 47.609722)), crs = 4326) %>%
  st_transform(2926)
```

```{r}
kc_house_data_sf <- kc_house_data_sf %>%
  mutate(
    dist_cbd = st_distance(cbd, ., by_element= TRUE),
    dist_cbd_km = set_units(dist_cbd, km)
  )
```

## Oppgave 3 WADOH Environmental Health Disparities Index County

```{r}
kc_wadoh_map <- here("Kart/WADOH_Environmental_Health_Disparities_Index_Calculated_for_King_County___wadohehdindex_area")%>% 
  st_read() %>% 
  st_transform(2926)
#Dersom jeg bruker .shp får jeg opp feilmelding om at filen ikke finnes i mappen. 
```

```{r}
kc_wadoh_map <- kc_wadoh_map %>%
select(
GEO_ID_TRT,
EHD_percen,#Environmental Health Index, weighted score many vars
linguist_2,#Pop. age 5+ speaking English less than "very well"
poverty_pe,#Percentage people living in poverty
POC_percen,#People of Color in percentage of pop. in tract
transporta,#% of income spent on transportation median family in tract
unemploy_2,#percentage unemployed
housing_pe,#% of households in group "Unaffordable Housing" (>30% inc.)
traffic_pe,#% of pop. near heavy traffic roadways
diesel,# nox consentration
ozone,# ozone consentration
PM25, # consentration of Particulate Matter in air
toxic_rele, # Toxic release from factories
hazardous_, # Hazardous Waste Treatment Storage and disposal Facilities
lead_perce, # measure of Lead paint in houses
superfund, # Proximity to contaminated sites on national list
facilities, # Proximity to Risk Management Plan Facilities
wastewater, # Proximity to wastewater facilities
sen_pop_pe, # % pop. over 65
socio_perc # score social economic determants, low best
)
```

```{r}
acs_b19101_fam_inc <- read.dbf("../censusSHP/acs_b19101_familyincome.dbf")
```

```{r}
acs_b19101_fam_inc <- acs_b19101_fam_inc %>% 
  mutate(low = (E19101138 + E19101139 + E19101140 + E19101141 + E19101142 + E19101143)/E19101137) %>% 
  mutate(mid = (E19101144 + E19101145 + E19101146 + E19101147 + E19101148 + E19101149)/E19101137) %>% 
  mutate(high = (E19101150 + E19101151 + E19101152 + E19101153)/E19101137)
```

```{r}
acs_b19101_fam_inc <- acs_b19101_fam_inc %>% 
  select(GEOIDTRT, low, mid, high) %>% 
  rename(GEO_ID_TRT = GEOIDTRT)
```

```{r}
kc_wadoh_map_2 <- left_join(acs_b19101_fam_inc, st_drop_geometry(kc_wadoh_map), by = "GEO_ID_TRT")
```

```{r}
kc_tracts10 <- here("../censusSHP/tracts10.shp") %>%  st_read() %>% 
  st_transform(2926)
```

```{r}
kc_tracts10_shore <- here("../censusSHP/tracts10_shore.shp") %>%  st_read() %>% 
  st_transform(2926)
```

```{r}
kc_tracts10_env_data <- left_join(
  kc_tracts10, kc_wadoh_map_2,
  by = "GEO_ID_TRT"
)
```

```{r}
kc_tracts10_shore_env_data <- left_join(kc_tracts10_shore, kc_wadoh_map_2, by= "GEO_ID_TRT")
```

```{r}
summary(kc_tracts10)
```

```{r}
kc_house_env_var <- st_join(kc_house_data_sf, kc_tracts10_env_data)
kc_tracts10_shore_env_var <- st_join(kc_house_data_sf, kc_tracts10_shore_env_data)
```

## Oppgave 4 "Spatial join"

```{r}
st_write(kc_house_data, "Kart/kc_house_data.gpkg", append = FALSE)
st_write(kc_tracts10, "Kart/kc_tracts10.gpkg", append = FALSE)
st_write(kc_tracts10_shore, "Kart/kc_tracts10_shore.gpkg", append = FALSE)
st_write(kc_house_env_var, "Kart/kc_house_env_var.gpkg", append = FALSE)
st_write(kc_tracts10_shore_env_var, "Kart/kc_tracts10_shore_env_var.gpkg", append = FALSE)
```

```{r}
summary(kc_tracts10_env_data)
```

```{r}
summary(kc_tracts10_shore_env_var)
```

###Spørsmål_ii. Forklar hvorfor vi har mange flere NA (25 flere) i tracts10_shore enn i tracts10. Ser dere nå hva som går galt med tracts10_shore?

![Figur1:Kommunegrense](Kart/Skjermbilde_1.png)

![Figur2](Kart/Skjermbilde_2.png)

## Husk å gi bedre navn til figurene!!

```{r}
kc_house_env_var <- arrange(kc_house_env_var, desc(id))
kc_house_env_var_omit <- kc_house_env_var[-c(11997),]
```

```{r}
st_write(kc_house_env_var_omit, "Kart/kc_house_env_var_omit.gpkg", append = FALSE)
```

## Får ikke til å gjøre om objekte til data.

```{r}
kc_house_env_var_omit <- kc_house_env_var_omit %>% 
  mutate(year_month = substr(date, start = 1, stop = 7))
```

```{r}
st_write(kc_house_env_var_omit, "Kart/kc_house_env_var_omit.gpkg", append = FALSE)
```

## Oppgave 5; GeoDa

![]()

![](Kart/Skjermbilde_4.png){fig-align="center"}

## 3 naboer

![små&dyr](Kart/Skjermbilde_5.png){fig-align="center"}

![store&dyr](Kart/Skjermbilde_6.png){fig-align="center"}

![](Kart/Skjermbilde_3.png){fig-align="center"}

![stor&billig](Kart/Skjermbilde_7.png){fig-align="center"}

![små&billig](Kart/Skjermbilde_8.png){fig-align="center"}

## 10 naboer

![små&dyr](Kart/Skjermbilde_9.png){fig-align="center"}

![stor&dyr](Kart/Skjermbilde_10.png){fig-align="center"}

![stor&billig](Kart/Skjermbilde_11.png){fig-align="center"}

![små&billig](Kart/Skjermbilde_12.png){fig-align="center"}

## Oppgave 6; Hedonisk modeller

### oppgave i.

Ved å se på pris i forhold til størrelsen på en bolig, ser en at billige og små boliger ligger nær sentrum. Ser en på de store og dyre boligene er dem plassert på østsiden for Seattle. Små og dyre boliger ligger tett rundt sentrum av Seattle. De store og billige ligger spredt i de landlige delen av King County.

### Modell 1

```{r}
mod1 <- "price ~ bedrooms + bathrooms + sqft_living + sqft_living15 + sqft_lot15 + sqft_above + floors + grade + yr_built + yr_renovated + waterfront + condition + year_month"
```

### Modell 2

```{r}
mod2 <- "price ~ bedrooms + bathrooms + sqft_living + sqft_living15 + sqft_lot + sqft_lot15 + sqft_above + floors + grade + yr_built + yr_renovated + waterfront + condition + view + year_month + dist_cbd_km + linguist_2 + poverty_pe + POC_percen + unemploy_2 + sen_pop_pe + facilities + wastewater + traffic_pe + diesel + superfund + transporta + housing_pe + ozone + PM25 + toxic_rele + hazardous_ + lead_perce + socio_perc"
```

### Modell 3

```{r}
mod3 <- "price ~ bedrooms + bathrooms + sqft_living + sqft_living15 + sqft_lot + sqft_lot15 + sqft_above + floors + grade + yr_built + yr_renovated + waterfront + condition + view + dist_cbd_km + low + high + EHD_percen + year_month"
```

```{r}
hedon1 <- lm(mod1, data= kc_house_env_var_omit)
hedon2 <- lm(mod2, data=kc_house_env_var_omit)
hedon3 <- lm(mod3, data = kc_house_env_var_omit)
```

```{r}
huxreg("Hedon1" = hedon1, "Hedon2" = hedon2, "Hedon3" = hedon3,
       error_format= "[{statistic}]", 
       note = "{stars}. T statistics in brackets.")
```

Av disse tre hedonske modellene er *mod2* bedre enn *mod3* med tanke på forklaringskraft. Men velger heller å jobbe med *mod3* ettersom den har en "samlevariabel" som fanger opp miljøfaktorer fra *mod2*.

```{r}
hedon1 %>% 
  plot()
```

```{r}
hedon2 %>% 
  plot()
```

```{r}
hedon3 %>% 
plot()
```

### Oppgave iii. Rapporter t-verdien som er det vanlige innen økonometri.

### Oppgave iv. Test og diskuter hvilken modell som er best.

## oppgave 7; Tidsdummy

```{r}
hedon1 %>% 
    linearHypothesis(c("year_month2014-06=0", "year_month2014-07=0",
                       "year_month2014-08=0", "year_month2014-09=0",
                       "year_month2014-10=0", "year_month2014-11=0",
                       "year_month2014-12=0", "year_month2015-01=0",
                       "year_month2015-02=0", "year_month2015-03=0",
                       "year_month2015-04=0", "year_month2015-05=0"),
                     white_adjust = hc3)
```

```{r}
hedon2 %>% 
    linearHypothesis(c("year_month2014-06=0", "year_month2014-07=0",
                       "year_month2014-08=0", "year_month2014-09=0",
                       "year_month2014-10=0", "year_month2014-11=0",
                       "year_month2014-12=0", "year_month2015-01=0",
                       "year_month2015-02=0", "year_month2015-03=0",
                       "year_month2015-04=0", "year_month2015-05=0"),
                     white_adjust = hc4)
```

```{r}
hedon3 %>% 
    linearHypothesis(c("year_month2014-06=0", "year_month2014-07=0",
                       "year_month2014-08=0", "year_month2014-09=0",
                       "year_month2014-10=0", "year_month2014-11=0",
                       "year_month2014-12=0", "year_month2015-01=0",
                       "year_month2015-02=0", "year_month2015-03=0",
                       "year_month2015-04=0", "year_month2015-05=0"),
                     white_adjust = hc1)
```

## Oppgave 8; Spatial Regressions

```{r}
kc_house_data_2222 <- here("Kart/kc_house_data_2222_Ingrid_og_Thibiga.gpkg") %>%
  st_read() %>% 
  st_transform(2926)
```

```{r}
kc_house_data_2222 <- kc_house_data_2222 %>% 
  mutate(
    dist_cbd=st_distance(cbd, ., by_element=TRUE),
    dist_cbd_km = set_units(dist_cbd, km),
year_month=substr(date, start=1, stop=7))
```

Endrer navnet til "low", "mid" og "high"

```{r}
kc_house_data_2222 <- kc_house_data_2222 %>% 
    rename(low = inc_fam_low_per,
           mid = inc_fam_med_per,
           high = inc_fam_high_per)
```

```{r}
#| eval: false
# ag: inc_fam_low_per etc. finnes ikke i kc_house_data_2222
#kc_house_data_2222 <- kc_house_data_2222 %>% 
#  rename(low = inc_fam_low_per,
#        mid=inc_fam_med_per,
#       high=inc_fam_high_per)
```

```{r}
hedon3_seed <- lm(mod3, data = kc_house_data_2222)
```

```{r}
huxreg("Full" = hedon3, "Seed" = hedon3_seed, error_format="[{statistic}]",
       note = "{stars}. T statistic in brackets.")
```

Generer en vektmatrise for k3:

```{r}
kc_house_data_2222_mat_nb <- knearneigh(kc_house_data_2222, k = 3)
kc_house_data_nb <- knn2nb(kc_house_data_2222_mat_nb)
kc_house_data_2222_W <- nb2listw(kc_house_data_nb, style = "W")
```

Generer en vektmatrise for k10:

```{r}
kc_house_data_2222_mat_nb10 <- knearneigh(kc_house_data_2222, k = 10)
kc_house_data_2222_nb10 <- knn2nb(kc_house_data_2222_mat_nb10)
kc_house_data_2222_W10 <- nb2listw(kc_house_data_2222_nb10)
```

Bruker moran's test av det nye datasettet for å finne ut om vi har uforklarte spatial effekt i residualene.

```{r}
lm.morantest(hedon3_seed, kc_house_data_2222_W)
lm.morantest(hedon3_seed, kc_house_data_2222_W10)
```

```{r}
moran.plot(log(kc_house_data_2222$price), listw = kc_house_data_2222_W, labels = FALSE, pch = 20, cex = 0.3)
```

```{r}
moran.plot(log(kc_house_data_2222$price), listw = kc_house_data_2222_W10, labels = FALSE, pch = 20, cex = 0.3)
```

Videre tar vi i bruk lagranges multiplikatortest.

Først for K=3:

```{r}
kc_lagrange_3 <- lm.LMtests(hedon3_seed, kc_house_data_2222_W, test = "all")
kc_lagrange_3
```

Deretter for K=10:

```{r}
kc_lagrange_10 <- lm.LMtests(hedon3_seed, kc_house_data_2222_W10, test = "all")
kc_lagrange_10
```

Ved å se på modellene får vi opp at *LMerr*, *LMlag*, *LMlag*, *RLMerr* og *RLMlag* er signifikante ettersom p-verdien er lavere enn null. AV *RLMerr* og *RMlag* velger vi den med høyest verdi.

### IV

Spatial Durbin Error Model:

```{r, cache=TRUE}
SDEM_seed <- errorsarlm(mod3, data = kc_house_data_2222, listw = kc_house_data_2222_W, Durbin = as.formula(~ bedrooms + bathrooms + sqft_living + sqft_living15 + sqft_lot + sqft_lot15 + sqft_above + floors + grade + yr_built + yr_renovated + waterfront + condition + view + dist_cbd_km + EHD_percen + low + high))
```

Spatial Lag of X:

```{r}
SLX_seed <- lmSLX(mod3, data = kc_house_data_2222, listw = kc_house_data_2222_W, Durbin =  as.formula(~ bedrooms + bathrooms + sqft_living + sqft_living15 + sqft_lot + sqft_lot15 + sqft_above + floors + grade + yr_built + yr_renovated + waterfront + condition + view + dist_cbd_km + EHD_percen + low + high))
```

Spartial Error Model:

```{r}
SEM_seed <- errorsarlm(mod3, data = kc_house_data_2222, listw = kc_house_data_2222_W, Durbin = FALSE)
```

```{r}
summary(impacts(SDEM_seed), zstats = TRUE)
```

```{r}
huxreg("SEM" = SEM_seed, "OLS" = hedon3_seed, error_format = "[{statistic}]", note = "{stars}, T statistic in brackets.")
```

```{r}
LR.Sarlm(SDEM_seed, SEM_seed)
LR.Sarlm(SDEM_seed, SLX_seed)
```

*SDEM* vil være den beste modelle i dette tilfellet.

Videre foretar vi en kontrolltest mot *OLS*-modellen.

```{r}
LR1.Sarlm(SDEM_seed)
```

```{r}
Hausman.test(SEM_seed) 
```

```{r}
bptest.Sarlm(SEM_seed,studentize = TRUE)
```

### VI

```{r}
moran.plot(residuals(hedon3_seed), listw = kc_house_data_2222_W10)
```

```{r}
moran.plot(residuals(SDEM_seed), listw = kc_house_data_2222_W10)
```

Ved å sammenligne figurene av OLS- og SDEM-modellene, ser man *SDEM* fjerne mye av den rommelige effekten. Legg merke til at vi bruker modell 3 som inneholder miljøfaktorer.

```{r}
moran.test(residuals(SDEM_seed), listw = kc_house_data_2222_W10)
```

## Oppgave 9; Utvalg

```{r}
set.seed(572)
kc_house_env_var_omit_2000 <- kc_house_env_var_omit[sample(1:nrow(kc_house_env_var_omit), 2000, replace = FALSE), ]
```

```{r}
hedon3_2000 <- lm(mod3, data = kc_house_env_var_omit_2000)
```

```{r}
huxreg("Full" = hedon3, "2000 Seed" = hedon3_2000, "2222 Seed" = hedon3_seed, 
    error_format = "[{statistic}]",
    note = "{stars}. T statistic in brackets.")
```

```{r}
kc_house_data_2000_mat_nb <- knearneigh(kc_house_env_var_omit_2000, k = 3)
kc_house_data_2000_nb <- knn2nb(kc_house_data_2000_mat_nb)
kc_house_data_2000_W <- nb2listw(kc_house_data_2000_nb, style = "W")
```

```{r}
kc_house_data_2000_mat_nb10 <- knearneigh(kc_house_env_var_omit_2000, k = 10)
kc_house_data_2000_nb10 <- knn2nb(kc_house_data_2000_mat_nb10)
kc_house_data_2000_W10 <- nb2listw(kc_house_data_2000_nb10, style = "W")
```

```{r}
lm.morantest(hedon3_2000, kc_house_data_2000_W)
lm.morantest(hedon3_2000, kc_house_data_2000_W10)
```

```{r}
moran.plot(log(kc_house_env_var_omit_2000$price), listw= kc_house_data_2000_W, labels = FALSE, pch = 20, cex = 0.3)
```

```{r}
moran.plot(log(kc_house_env_var_omit_2000$price), listw = kc_house_data_2000_W10, labels = FALSE, pch = 20, cex = 0.3)
```

```{r}
kc_lagrange_3_2000 <- lm.LMtests(hedon3_2000, kc_house_data_2000_W, test = "all")
kc_lagrange_3_2000
```

```{r}
kc_lagrange_10_2000 <- lm.LMtests(hedon3_2000, kc_house_data_2000_W10, test = "all")
kc_lagrange_10_2000
```

```{r}
SDEM_2000 <- errorsarlm(mod3, data = kc_house_env_var_omit_2000, listw = kc_house_data_2000_W, Durbin = as.formula(~ bedrooms + bathrooms + sqft_living + sqft_living15 + sqft_lot + sqft_lot15 + sqft_above + floors + grade + yr_built + yr_renovated + waterfront + condition + view + dist_cbd_km + EHD_percen + low + high))
```

```{r}
SLX_2000 <- lmSLX(mod3, data = kc_house_env_var_omit_2000, listw = kc_house_data_2000_W, Durbin =  as.formula(~ bedrooms + bathrooms + sqft_living + sqft_living15 + sqft_lot + sqft_lot15 + sqft_above + floors + grade + yr_built + yr_renovated + waterfront + condition + view + dist_cbd_km + EHD_percen + low + high))
```

```{r}
SEM_2000 <- errorsarlm(mod3, data = kc_house_env_var_omit_2000, listw = kc_house_data_2000_W, Durbin = FALSE)
```

```{r}
summary(impacts(SDEM_2000), zstats = TRUE)
```

```{r}
huxreg("SEM" = SEM_2000, "OLS" = hedon3_2000, error_format = "[{statistic}]", note = "{stars}. T statistic in brackets.")
```

```{r}
LR.Sarlm(SDEM_2000, SEM_2000)
LR.Sarlm(SDEM_2000, SLX_2000)
```

```{r}
Hausman.test(SEM_2000)
```

```{r}
bptest.Sarlm(SEM_2000, studentize = TRUE)
```

```{r}
moran.plot(residuals(hedon3_2000), listw = kc_house_data_2000_W10)
```

```{r}
moran.plot(residuals(SDEM_2000), listw = kc_house_data_2000_W10)
```

```{r}
moran.test(residuals(SDEM_2000), listw = kc_house_data_2000_W10)
```

## Oppgave 10; Konklusjon

Hvis man ser på dataene som vi har brukt i denne oppgaven, ser vi at dataene som er hentet fra *Kaggle* og de vi har fått tildelt er ganske like. Vi ser i tillegg at tilfeldig og definert utvalg ikke avviker ikke i stor grad med hverandre.

```{r, echo=FALSE}
#Ferdig
```

## Reference

[^1]: Data provided by permission of King County.


